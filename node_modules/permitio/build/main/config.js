"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConfigFactory = void 0;
const axios_1 = __importDefault(require("axios"));
const lodash_1 = __importDefault(require("lodash"));
const context_1 = require("./api/context");
/**
 * A factory class for the Permit SDK configuration
 */
class ConfigFactory {
    /**
     * @returns the default SDK configuration
     */
    static defaults() {
        return {
            token: lodash_1.default.get(process.env, 'PERMIT_API_KEY', ''),
            pdp: lodash_1.default.get(process.env, 'PERMIT_PDP_URL', 'http://localhost:7766'),
            apiUrl: lodash_1.default.get(process.env, 'PERMIT_API_URL', 'https://api.permit.io'),
            log: {
                // log level, default is warn (warnings and errors)
                level: lodash_1.default.get(process.env, 'PERMIT_LOG_LEVEL', 'warn'),
                // Label added to logs
                label: lodash_1.default.get(process.env, 'PERMIT_LOG_LABEL', 'Permit.io'),
                // When logging - dump full data to console as JSON
                json: JSON.parse(lodash_1.default.get(process.env, 'PERMIT_LOG_JSON', 'false')),
            },
            multiTenancy: {
                defaultTenant: 'default',
                useDefaultTenantIfEmpty: true,
            },
            timeout: undefined,
            throwOnError: true,
            apiContext: new context_1.ApiContext(),
            axiosInstance: axios_1.default.create(),
            proxyFactsViaPdp: false,
            factsSyncTimeout: null,
        };
    }
    /**
     * Builds the Permit SDK configuration from the values provided by the SDK user
     * and from the default SDK configuration when no specific values are set.
     *
     * @param options - a partial configuration
     * @returns the SDK configuration (for unset values returns the default config)
     */
    static build(options) {
        const config = lodash_1.default.merge(lodash_1.default.assign({}, ConfigFactory.defaults()), options);
        return config;
    }
}
exports.ConfigFactory = ConfigFactory;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlnLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2NvbmZpZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxrREFBbUQ7QUFDbkQsb0RBQXVCO0FBRXZCLDJDQUEyQztBQStGM0M7O0dBRUc7QUFDSCxNQUFhLGFBQWE7SUFDeEI7O09BRUc7SUFDSCxNQUFNLENBQUMsUUFBUTtRQUNiLE9BQU87WUFDTCxLQUFLLEVBQUUsZ0JBQUMsQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsRUFBRSxFQUFFLENBQUM7WUFDL0MsR0FBRyxFQUFFLGdCQUFDLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxHQUFHLEVBQUUsZ0JBQWdCLEVBQUUsdUJBQXVCLENBQUM7WUFDbEUsTUFBTSxFQUFFLGdCQUFDLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxHQUFHLEVBQUUsZ0JBQWdCLEVBQUUsdUJBQXVCLENBQUM7WUFDckUsR0FBRyxFQUFFO2dCQUNILG1EQUFtRDtnQkFDbkQsS0FBSyxFQUFFLGdCQUFDLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxHQUFHLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxDQUFDO2dCQUNyRCxzQkFBc0I7Z0JBQ3RCLEtBQUssRUFBRSxnQkFBQyxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLGtCQUFrQixFQUFFLFdBQVcsQ0FBQztnQkFDMUQsbURBQW1EO2dCQUNuRCxJQUFJLEVBQUUsSUFBSSxDQUFDLEtBQUssQ0FBQyxnQkFBQyxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLGlCQUFpQixFQUFFLE9BQU8sQ0FBQyxDQUFDO2FBQ2pFO1lBQ0QsWUFBWSxFQUFFO2dCQUNaLGFBQWEsRUFBRSxTQUFTO2dCQUN4Qix1QkFBdUIsRUFBRSxJQUFJO2FBQzlCO1lBQ0QsT0FBTyxFQUFFLFNBQVM7WUFDbEIsWUFBWSxFQUFFLElBQUk7WUFDbEIsVUFBVSxFQUFFLElBQUksb0JBQVUsRUFBRTtZQUM1QixhQUFhLEVBQUUsZUFBVyxDQUFDLE1BQU0sRUFBRTtZQUNuQyxnQkFBZ0IsRUFBRSxLQUFLO1lBQ3ZCLGdCQUFnQixFQUFFLElBQUk7U0FDdkIsQ0FBQztJQUNKLENBQUM7SUFFRDs7Ozs7O09BTUc7SUFDSCxNQUFNLENBQUMsS0FBSyxDQUFDLE9BQXdDO1FBQ25ELE1BQU0sTUFBTSxHQUFHLGdCQUFDLENBQUMsS0FBSyxDQUFDLGdCQUFDLENBQUMsTUFBTSxDQUFDLEVBQUUsRUFBRSxhQUFhLENBQUMsUUFBUSxFQUFFLENBQUMsRUFBRSxPQUFPLENBQUMsQ0FBQztRQUN4RSxPQUFPLE1BQU0sQ0FBQztJQUNoQixDQUFDO0NBQ0Y7QUF6Q0Qsc0NBeUNDIn0=