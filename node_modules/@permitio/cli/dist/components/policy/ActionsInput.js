import React, { useState } from 'react';
import { Box, Text } from 'ink';
import TextInput from 'ink-text-input';
export const ActionInput = ({ onComplete, availableResources = [], }) => {
    const [input, setInput] = useState('');
    const [validationError, setValidationError] = useState(null);
    const placeholder = 'Create, Read, Update, Delete';
    const validateActionKey = (key) => {
        return /^[a-zA-Z][a-zA-Z0-9_-]*$/.test(key);
    };
    const handleSubmit = (value) => {
        // Clear any previous validation errors
        setValidationError(null);
        if (value.trim() === '') {
            setInput(placeholder);
            return;
        }
        try {
            const valueToProcess = value.trim();
            const keys = valueToProcess
                .split(',')
                .map(k => k.trim())
                .filter(Boolean);
            if (keys.length === 0) {
                setValidationError('Please enter at least one action');
                return;
            }
            const invalidKeys = keys.filter(key => !validateActionKey(key));
            if (invalidKeys.length > 0) {
                setValidationError(`Invalid action keys: ${invalidKeys.join(', ')}`);
                return;
            }
            const actions = keys.reduce((acc, key) => {
                acc[key] = {
                    name: key,
                    description: `${key.charAt(0).toUpperCase() + key.slice(1)} access`,
                };
                return acc;
            }, {});
            onComplete(actions);
            setInput('');
        }
        catch (err) {
            setValidationError(err.message);
        }
    };
    return (React.createElement(Box, { flexDirection: "column", gap: 1 },
        React.createElement(Box, null,
            React.createElement(Text, { bold: true }, "Configure Actions")),
        availableResources.length > 0 && (React.createElement(Box, null,
            React.createElement(Text, { color: "cyan" },
                "Resources: ",
                availableResources.join(', ')))),
        React.createElement(Box, null,
            React.createElement(Text, null, "Enter action keys (comma-separated):")),
        React.createElement(Box, null,
            React.createElement(Text, { dimColor: true },
                "For Example: ",
                React.createElement(Text, { color: "yellow" }, placeholder))),
        React.createElement(Box, null,
            React.createElement(Text, null, '> '),
            React.createElement(TextInput, { value: input, onChange: setInput, onSubmit: handleSubmit })),
        validationError && (React.createElement(Box, null,
            React.createElement(Text, { color: "red" }, validationError)))));
};
