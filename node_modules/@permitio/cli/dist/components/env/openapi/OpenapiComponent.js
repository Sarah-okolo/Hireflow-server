import React, { useState, useEffect } from 'react';
import OpenapiForm from './OpenapiForm.js';
import OpenapiResults from './OpenapiResults.js';
import { useOpenapiProcessor } from '../../../hooks/openapi/useOpenapiProcessor.js';
/**
 * Main component for the OpenAPI spec processing
 *
 * This component coordinates the form, processing, and results display.
 */
export default function OpenapiComponent({ specFile, }) {
    // State management
    const [status, setStatus] = useState('init');
    const [inputPath, setInputPath] = useState(specFile || '');
    const [error, setError] = useState(null);
    const [progress, setProgress] = useState('');
    const [processingDone, setProcessingDone] = useState(false);
    // Get the processor hook
    const { processSpec } = useOpenapiProcessor({
        inputPath,
        setProgress,
        setStatus,
        setError,
        setProcessingDone,
    });
    // Handle form submission
    const handleSubmit = () => {
        if (!inputPath) {
            setError('Please enter a valid file path or URL');
            return;
        }
        setStatus('loading');
        setProgress('Starting to process OpenAPI spec...');
        // Process the OpenAPI spec
        processSpec();
    };
    // Run processing when specFile is provided initially
    useEffect(() => {
        if (specFile && status === 'init') {
            setInputPath(specFile);
            setStatus('loading');
            setProgress('Starting to process OpenAPI spec...');
            processSpec();
        }
    }, [specFile, status, processSpec]);
    // Render the appropriate component based on the status
    if (status === 'init') {
        return (React.createElement(OpenapiForm, { inputPath: inputPath, setInputPath: setInputPath, onSubmit: handleSubmit }));
    }
    // For all other states, show the results component
    return (React.createElement(OpenapiResults, { status: status, error: error, progress: progress, processingDone: processingDone }));
}
