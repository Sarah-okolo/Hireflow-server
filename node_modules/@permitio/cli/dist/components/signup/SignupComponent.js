import React, { useState, useEffect } from 'react';
import { TextInput, ConfirmInput } from '@inkjs/ui';
import { Text, Newline } from 'ink';
import Spinner from 'ink-spinner';
import randomName from '@scaleway/random-name';
import { useOrganisationApi } from '../../hooks/useOrganisationApi.js';
import { cleanKey } from '../../lib/env/copy/utils.js';
const SignupComponent = ({ accessToken, cookie, onSuccess, }) => {
    const [organizationName, setOrganizationName] = useState(randomName());
    const [error, setError] = useState(null);
    const [state, setState] = useState('confirming');
    useEffect(() => {
        if (state === 'done') {
            onSuccess();
        }
        if (error) {
            setTimeout(() => {
                process.exit(1);
            }, 1000);
        }
    });
    const { createOrg } = useOrganisationApi();
    const handleWorkspaceCreation = async (workspace) => {
        const cleanOrgName = cleanKey(workspace);
        setOrganizationName(cleanOrgName);
        const { error } = await createOrg({
            key: cleanOrgName,
            name: cleanOrgName,
        }, accessToken, cookie);
        if (error) {
            setError(error.toString());
            return;
        }
        setState('done');
    };
    const handleConfirm = async () => {
        setState('creating');
        await handleWorkspaceCreation(organizationName);
    };
    const handleCancel = () => {
        setState('selecting');
    };
    return (React.createElement(React.Fragment, null,
        React.createElement(Text, { bold: true }, "Welcome! Create your Workspace"),
        state === 'confirming' && (React.createElement(React.Fragment, null,
            React.createElement(Text, null,
                "Use the default organization name:",
                ' ',
                React.createElement(Text, { color: "green" }, organizationName),
                "?",
                ' ',
                React.createElement(ConfirmInput, { onConfirm: handleConfirm, onCancel: handleCancel }),
                ' '))),
        state === 'selecting' && (React.createElement(React.Fragment, null,
            React.createElement(Text, null,
                "Enter your organization name (Default:",
                ' ',
                React.createElement(Text, { color: "green" }, organizationName),
                "):"),
            React.createElement(TextInput, { placeholder: "Type your organization name...", onSubmit: input => {
                    setState('creating');
                    handleWorkspaceCreation(input || organizationName);
                } }))),
        state === 'creating' && (React.createElement(React.Fragment, null,
            React.createElement(Text, null,
                "Creating your organization ",
                React.createElement(Spinner, null)))),
        state === 'done' && (React.createElement(React.Fragment, null,
            React.createElement(Text, null,
                "Organization: ",
                organizationName,
                " created successfully & Signup successful"))),
        error && (React.createElement(React.Fragment, null,
            React.createElement(Newline, null),
            React.createElement(Text, { color: "red" }, error)))));
};
export default SignupComponent;
