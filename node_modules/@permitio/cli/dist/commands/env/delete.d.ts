import React from 'react';
import zod from 'zod';
import { type infer as zInfer } from 'zod';
export declare const description = "Delete a Permit environment";
export declare const options: zod.ZodObject<{
    apiKey: zod.ZodOptional<zod.ZodString>;
    envId: zod.ZodOptional<zod.ZodString>;
    force: zod.ZodDefault<zod.ZodOptional<zod.ZodBoolean>>;
}, "strip", zod.ZodTypeAny, {
    force: boolean;
    apiKey?: string | undefined;
    envId?: string | undefined;
}, {
    apiKey?: string | undefined;
    force?: boolean | undefined;
    envId?: string | undefined;
}>;
type Props = {
    readonly options: zInfer<typeof options>;
};
export default function Delete({ options: { apiKey, envId, force } }: Props): React.JSX.Element;
export {};
