import React from 'react';
import { type infer as zInfer } from 'zod';
export declare const description = "This is a simple command which syncs the user to the Permit.io";
export declare const options: import("zod").ZodObject<{
    apiKey: import("zod").ZodOptional<import("zod").ZodString>;
    key: import("zod").ZodOptional<import("zod").ZodString>;
    email: import("zod").ZodOptional<import("zod").ZodString>;
    firstName: import("zod").ZodOptional<import("zod").ZodString>;
    lastName: import("zod").ZodOptional<import("zod").ZodString>;
    attributes: import("zod").ZodOptional<import("zod").ZodArray<import("zod").ZodString, "many">>;
    roles: import("zod").ZodOptional<import("zod").ZodArray<import("zod").ZodUnion<[import("zod").ZodString, import("zod").ZodString, import("zod").ZodString, import("zod").ZodString]>, "many">>;
}, "strip", import("zod").ZodTypeAny, {
    key?: string | undefined;
    apiKey?: string | undefined;
    attributes?: string[] | undefined;
    roles?: string[] | undefined;
    email?: string | undefined;
    firstName?: string | undefined;
    lastName?: string | undefined;
}, {
    key?: string | undefined;
    apiKey?: string | undefined;
    attributes?: string[] | undefined;
    roles?: string[] | undefined;
    email?: string | undefined;
    firstName?: string | undefined;
    lastName?: string | undefined;
}>;
type Props = {
    options: zInfer<typeof options>;
};
export default function User({ options }: Props): React.JSX.Element;
export {};
