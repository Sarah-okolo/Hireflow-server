import React from 'react';
import { type infer as zInfer } from 'zod';
export declare const options: import("zod").ZodObject<{
    apiKey: import("zod").ZodOptional<import("zod").ZodString>;
    projectId: import("zod").ZodOptional<import("zod").ZodString>;
    envId: import("zod").ZodOptional<import("zod").ZodString>;
    expandKey: import("zod").ZodDefault<import("zod").ZodOptional<import("zod").ZodBoolean>>;
    page: import("zod").ZodDefault<import("zod").ZodOptional<import("zod").ZodNumber>>;
    perPage: import("zod").ZodDefault<import("zod").ZodOptional<import("zod").ZodNumber>>;
    role: import("zod").ZodOptional<import("zod").ZodString>;
    tenant: import("zod").ZodOptional<import("zod").ZodString>;
    all: import("zod").ZodDefault<import("zod").ZodOptional<import("zod").ZodBoolean>>;
}, "strip", import("zod").ZodTypeAny, {
    page: number;
    expandKey: boolean;
    perPage: number;
    all: boolean;
    tenant?: string | undefined;
    role?: string | undefined;
    apiKey?: string | undefined;
    projectId?: string | undefined;
    envId?: string | undefined;
}, {
    page?: number | undefined;
    tenant?: string | undefined;
    role?: string | undefined;
    apiKey?: string | undefined;
    expandKey?: boolean | undefined;
    perPage?: number | undefined;
    all?: boolean | undefined;
    projectId?: string | undefined;
    envId?: string | undefined;
}>;
type Props = {
    options: zInfer<typeof options>;
};
export default function List({ options }: Props): React.JSX.Element;
export {};
