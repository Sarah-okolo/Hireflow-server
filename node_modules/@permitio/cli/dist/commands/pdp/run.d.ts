import React from 'react';
import { type infer as zInfer } from 'zod';
export declare const description = "Run a Permit PDP Docker container for local development";
export declare const options: import("zod").ZodObject<{
    opa: import("zod").ZodOptional<import("zod").ZodNumber>;
    dryRun: import("zod").ZodDefault<import("zod").ZodOptional<import("zod").ZodBoolean>>;
    apiKey: import("zod").ZodOptional<import("zod").ZodString>;
}, "strip", import("zod").ZodTypeAny, {
    dryRun: boolean;
    apiKey?: string | undefined;
    opa?: number | undefined;
}, {
    apiKey?: string | undefined;
    dryRun?: boolean | undefined;
    opa?: number | undefined;
}>;
type Props = {
    options: zInfer<typeof options>;
};
export default function Run({ options: { opa, dryRun, apiKey } }: Props): React.JSX.Element;
export {};
