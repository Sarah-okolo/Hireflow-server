import React from 'react';
import { type infer as zInfer } from 'zod';
import { ActiveState } from '../components/EnvironmentSelection.js';
export declare const options: import("zod").ZodObject<{
    apiKey: import("zod").ZodOptional<import("zod").ZodString>;
    workspace: import("zod").ZodOptional<import("zod").ZodString>;
}, "strip", import("zod").ZodTypeAny, {
    apiKey?: string | undefined;
    workspace?: string | undefined;
}, {
    apiKey?: string | undefined;
    workspace?: string | undefined;
}>;
type Props = {
    readonly options: zInfer<typeof options>;
    loginSuccess?: (organisation: ActiveState, project: ActiveState, environment: ActiveState, secret: string) => void;
};
export default function Login({ options: { apiKey, workspace }, loginSuccess, }: Props): React.JSX.Element;
export {};
