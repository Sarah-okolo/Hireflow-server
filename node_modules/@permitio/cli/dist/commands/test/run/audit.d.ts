import React from 'react';
import zod from 'zod';
export declare const description = "Test PDP against audit logs to find differences in behavior";
export declare const options: zod.ZodObject<{
    apiKey: zod.ZodOptional<zod.ZodString>;
    pdpUrl: zod.ZodDefault<zod.ZodString>;
    timeFrame: zod.ZodDefault<zod.ZodNumber>;
    sourcePdp: zod.ZodOptional<zod.ZodString>;
    users: zod.ZodOptional<zod.ZodArray<zod.ZodString, "many">>;
    resources: zod.ZodOptional<zod.ZodArray<zod.ZodString, "many">>;
    tenant: zod.ZodOptional<zod.ZodString>;
    action: zod.ZodOptional<zod.ZodString>;
    decision: zod.ZodOptional<zod.ZodEnum<["allow", "deny"]>>;
    maxLogs: zod.ZodDefault<zod.ZodOptional<zod.ZodNumber>>;
}, "strip", zod.ZodTypeAny, {
    pdpUrl: string;
    timeFrame: number;
    maxLogs: number;
    tenant?: string | undefined;
    users?: string[] | undefined;
    decision?: "allow" | "deny" | undefined;
    resources?: string[] | undefined;
    action?: string | undefined;
    apiKey?: string | undefined;
    sourcePdp?: string | undefined;
}, {
    tenant?: string | undefined;
    users?: string[] | undefined;
    decision?: "allow" | "deny" | undefined;
    resources?: string[] | undefined;
    action?: string | undefined;
    apiKey?: string | undefined;
    pdpUrl?: string | undefined;
    timeFrame?: number | undefined;
    sourcePdp?: string | undefined;
    maxLogs?: number | undefined;
}>;
type Props = {
    options: zod.infer<typeof options>;
};
export default function Audit({ options }: Props): React.JSX.Element;
export {};
