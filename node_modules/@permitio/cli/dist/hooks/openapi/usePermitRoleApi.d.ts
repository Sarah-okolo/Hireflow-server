/**
 * Hook for role-related Permit API operations
 */
export declare const usePermitRoleApi: () => {
    listRoles: () => Promise<Omit<import("openapi-fetch").FetchResponse<{
        parameters: {
            query?: {
                include_total_count?: boolean;
                page?: number;
                per_page?: number;
                search?: string;
            };
            header?: never;
            path: {
                proj_id: string;
                env_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": import("../../lib/api/v1.js").components["schemas"]["PaginatedResult_RoleRead_"] | import("../../lib/api/v1.js").components["schemas"]["RoleRead"][];
                };
            };
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": import("../../lib/api/v1.js").components["schemas"]["HTTPValidationError"];
                };
            };
        };
    }, import("openapi-fetch").FetchOptions<{
        parameters: {
            query?: {
                include_total_count?: boolean;
                page?: number;
                per_page?: number;
                search?: string;
            };
            header?: never;
            path: {
                proj_id: string;
                env_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": import("../../lib/api/v1.js").components["schemas"]["PaginatedResult_RoleRead_"] | import("../../lib/api/v1.js").components["schemas"]["RoleRead"][];
                };
            };
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": import("../../lib/api/v1.js").components["schemas"]["HTTPValidationError"];
                };
            };
        };
    }>, "application/json">, "error"> & {
        error: string | null;
    }>;
    getRole: (roleKey: string) => Promise<Omit<import("openapi-fetch").FetchResponse<{
        parameters: {
            query?: never;
            header?: never;
            path: {
                role_id: string;
                proj_id: string;
                env_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": import("../../lib/api/v1.js").components["schemas"]["RoleRead"];
                };
            };
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": import("../../lib/api/v1.js").components["schemas"]["HTTPValidationError"];
                };
            };
        };
    }, import("openapi-fetch").FetchOptions<{
        parameters: {
            query?: never;
            header?: never;
            path: {
                role_id: string;
                proj_id: string;
                env_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": import("../../lib/api/v1.js").components["schemas"]["RoleRead"];
                };
            };
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": import("../../lib/api/v1.js").components["schemas"]["HTTPValidationError"];
                };
            };
        };
    }>, "application/json">, "error"> & {
        error: string | null;
    }>;
    createRole: (roleKey: string, roleName: string) => Promise<Omit<import("openapi-fetch").FetchResponse<{
        parameters: {
            query?: never;
            header?: never;
            path: {
                proj_id: string;
                env_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": import("../../lib/api/v1.js").components["schemas"]["RoleCreate"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": import("../../lib/api/v1.js").components["schemas"]["RoleRead"];
                };
            };
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": import("../../lib/api/v1.js").components["schemas"]["HTTPValidationError"];
                };
            };
        };
    }, import("openapi-fetch").FetchOptions<{
        parameters: {
            query?: never;
            header?: never;
            path: {
                proj_id: string;
                env_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": import("../../lib/api/v1.js").components["schemas"]["RoleCreate"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": import("../../lib/api/v1.js").components["schemas"]["RoleRead"];
                };
            };
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": import("../../lib/api/v1.js").components["schemas"]["HTTPValidationError"];
                };
            };
        };
    }>, "application/json">, "error"> & {
        error: string | null;
    }>;
    updateRole: (roleKey: string, roleName: string, permissions?: string[]) => Promise<Omit<import("openapi-fetch").FetchResponse<{
        parameters: {
            query?: never;
            header?: never;
            path: {
                role_id: string;
                proj_id: string;
                env_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": import("../../lib/api/v1.js").components["schemas"]["RoleUpdate"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": import("../../lib/api/v1.js").components["schemas"]["RoleRead"];
                };
            };
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": import("../../lib/api/v1.js").components["schemas"]["HTTPValidationError"];
                };
            };
        };
    }, import("openapi-fetch").FetchOptions<{
        parameters: {
            query?: never;
            header?: never;
            path: {
                role_id: string;
                proj_id: string;
                env_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": import("../../lib/api/v1.js").components["schemas"]["RoleUpdate"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": import("../../lib/api/v1.js").components["schemas"]["RoleRead"];
                };
            };
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": import("../../lib/api/v1.js").components["schemas"]["HTTPValidationError"];
                };
            };
        };
    }>, "application/json">, "error"> & {
        error: string | null;
    }>;
    createResourceRole: (resourceKey: string, roleKey: string, roleName: string, permissionString: string) => Promise<Omit<import("openapi-fetch").FetchResponse<{
        parameters: {
            query?: never;
            header?: never;
            path: {
                proj_id: string;
                env_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": import("../../lib/api/v1.js").components["schemas"]["RoleCreate"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": import("../../lib/api/v1.js").components["schemas"]["RoleRead"];
                };
            };
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": import("../../lib/api/v1.js").components["schemas"]["HTTPValidationError"];
                };
            };
        };
    }, import("openapi-fetch").FetchOptions<{
        parameters: {
            query?: never;
            header?: never;
            path: {
                proj_id: string;
                env_id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": import("../../lib/api/v1.js").components["schemas"]["RoleCreate"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": import("../../lib/api/v1.js").components["schemas"]["RoleRead"];
                };
            };
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": import("../../lib/api/v1.js").components["schemas"]["HTTPValidationError"];
                };
            };
        };
    }>, "application/json">, "error"> & {
        error: string | null;
    }>;
};
