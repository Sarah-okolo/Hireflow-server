import { useCallback, useMemo } from 'react';
import useClient from './useClient.js';
export const useOrganisationApi = () => {
    const { authenticatedApiClient, unAuthenticatedApiClient } = useClient();
    const getOrgs = useCallback(async (accessToken, cookie) => {
        return accessToken || cookie
            ? await unAuthenticatedApiClient(accessToken, cookie).GET('/v2/orgs')
            : await authenticatedApiClient().GET('/v2/orgs');
    }, [authenticatedApiClient, unAuthenticatedApiClient]);
    const getOrg = useCallback(async (org_id, accessToken, cookie) => {
        return accessToken || cookie
            ? await unAuthenticatedApiClient(accessToken, cookie).GET(`/v2/orgs/{org_id}`, {
                org_id: org_id,
            })
            : await authenticatedApiClient().GET(`/v2/orgs/{org_id}`, {
                org_id,
            });
    }, [authenticatedApiClient, unAuthenticatedApiClient]);
    const createOrg = useCallback(async (body, accessToken, cookie) => {
        return accessToken || cookie
            ? await unAuthenticatedApiClient(accessToken, cookie).POST(`/v2/orgs`, undefined, body)
            : await authenticatedApiClient().POST(`/v2/orgs`, undefined, body, undefined);
    }, [authenticatedApiClient, unAuthenticatedApiClient]);
    return useMemo(() => ({
        getOrgs,
        getOrg,
        createOrg,
    }), [createOrg, getOrg, getOrgs]);
};
