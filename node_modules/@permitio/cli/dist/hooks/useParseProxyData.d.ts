import { type infer as zType } from 'zod';
import { options as originalOptions } from '../commands/api/create/proxy.js';
import { ProxyConfigOptions } from '../utils/api/proxy/createutils.js';
type CreateProxyOptions = zType<typeof originalOptions>;
type IndividualMappingRuleFlags = {
    mappingRuleMethod?: string;
    mappingRuleUrl?: string;
    mappingRuleResource?: string;
    mappingRuleAction?: string;
    mappingRulePriority?: number;
    mappingRuleHeaders?: string[];
    mappingRuleUrlType?: string;
};
export declare function useParseProxyData(options: CreateProxyOptions & IndividualMappingRuleFlags): {
    payload: ProxyConfigOptions;
    parseError: string | null;
    updatePayloadKey: (newKey: string) => void;
};
export default useParseProxyData;
